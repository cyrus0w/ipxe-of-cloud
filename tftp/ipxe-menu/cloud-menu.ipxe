#!ipxe
######################################## 本菜单单独拿出去使用时自定义选项 #############################################
#isset ${next-server} || set next-server 10.10.19.81
#set boot-url http://${next-server}
#set script-base-url http://${next-server}
#set cloud-mirror-base-url http://mirrors.163.com
#set cloud-bios-picture-url http://${next-server}/ipxe-menu/png/ipxe.png
#set cloud-uefi-picture-url http://${next-server}/ipxe-menu/png/ipxe.png
#set submenu-timeout 5000

#===根据bios或uefi进行菜单自动选择(这种方式需要写俩套菜单)===#
iseq ${platform} pcbios && set start menu-bios-cloud || set start menu-uefi-cloud
goto ${start}
######################################## BIOS 菜单总览 #############################################
##=============================== 加载云 BIOS 子菜单 ===================================
:menu-bios-cloud
#设置背景图片
console --picture ${cloud-bios-picture-url}
#console --picture ${main-bios-picture-url} --left 12 --right 12 --top 12 --bottom 28
#console --x 1920 --y 1080 --picture ${main-bios-picture-url}
#判断efi还是bios，在最顶端显示
iseq ${platform} efi && menu iPXE Boot Menu (Cloud/UEFI) - Mod By cyrus0w || menu iPXE Boot Menu (Cloud/BIOS) - Mod By cyrus0w
item --gap -- IP:${ip} -- DHCP:${dhcp-server} -- boot-url = ${boot-url}
console --picture ${cloud-bios-picture-url}
#set submenu-timeout 5000
set submenu-default clo_new_centos7-server
item
item --gap --                        ------------------------------------ Linux -------------------------------
item --key a clo_new_centos7-server  [A] Boot Cloud Centos-${cloud-new-centos7-version}-Server -----------------------(autoinstall)
item --key b clo_new_centos7-desktop [B] Boot Cloud Centos-${cloud-new-centos7-version}-Desktop ----------------------(autoinstall)
item --key c clo_centos7-server      [C] Boot Cloud Centos-${cloud-centos7-version}-Server -----------------------(autoinstall)
item --key d clo_centos7-desktop     [D] Boot Cloud Centos-${cloud-centos7-version}-Desktop ----------------------(autoinstall)
item --key f clo_ubuntu-Server1804   [F] Boot Cloud Ubuntu-Server18.04 ---------------------------(autoinstall)
item --key g clo_ubuntu-desktop1804  [G] Boot Cloud Ubuntu-Desktop18.04 --------------------------(autoinstall)
item --key h clo_ubuntu-Server2004   [H] Boot Cloud Ubuntu-Server20.04 ---------------------------(autoinstall)
item --key i clo_ubuntu-desktop2004  [I] Boot Cloud Ubuntu-Desktop20.04 --------------------------(autoinstall)
item
item --gap --                        ------------------------------ Advanced options --------------------------
item --key q local                   [Q] Boot from local drive ------------------------------------------------
item --key r config                  [R] Configure settings ---------------------------------------------------
item --key s shell                   [S] Enter iPXE shell -----------------------------------------------------
item --key t reboot                  [T] Reboot ---------------------------------------------------------------
item --key u power                   [U] Shutdown -------------------------------------------------------------
item                                 
item --key x exit                    [X] Exit iPXE and continue boot ------------------------------------------
item                                 
item --key o back                    [O] Back to top menu -----------------------------------------------------

#在子菜单默认时间${submenu-timeout}到时选择默认启动项${submenu-default}
choose --timeout ${submenu-timeout} --default ${submenu-default} selected || goto cancel
set menu-timeout 0
goto ${selected}

######################################## EFI 菜单总览 #############################################
##=============================== 加载云 UEFI 子菜单 ===================================
:menu-uefi-cloud
#设置背景图片
console --picture ${cloud-uefi-picture-url} #--left 100 --right 12 --top 12 --bottom 28
#console --x 1920 --y 1080 --picture ${main-uefi-picture-url}
#判断efi还是bios，在最顶端显示
iseq ${platform} efi && menu iPXE Boot Menu (Cloud/UEFI) - Mod By cyrus0w || menu iPXE Boot Menu (Cloud/BIOS) - Mod By cyrus0w
item --gap -- IP:${ip} -- DHCP:${dhcp-server} -- boot-url = ${boot-url}
console --picture ${cloud-uefi-picture-url}
#set submenu-timeout 5000
set submenu-default clo_new_centos7-server
item
item --gap --                        ------------------------------------ Linux -------------------------------
item --key a clo_new_centos7-server  [A] Boot Cloud Centos-${cloud-new-centos7-version}-Server -----------------------(autoinstall)
item --key b clo_new_centos7-desktop [B] Boot Cloud Centos-${cloud-new-centos7-version}-Desktop ----------------------(autoinstall)
item --key c clo_centos7-server      [C] Boot Cloud Centos-${cloud-centos7-version}-Server -----------------------(autoinstall)
item --key d clo_centos7-desktop     [D] Boot Cloud Centos-${cloud-centos7-version}-Desktop ----------------------(autoinstall)
item --key f clo_ubuntu-Server1804   [F] Boot Cloud Ubuntu-Server18.04 ---------------------------(autoinstall)
item --key g clo_ubuntu-desktop1804  [G] Boot Cloud Ubuntu-Desktop18.04 --------------------------(autoinstall)
item --key h clo_ubuntu-Server2004   [H] Boot Cloud Ubuntu-Server20.04 ---------------------------(autoinstall)
item --key i clo_ubuntu-desktop2004  [I] Boot Cloud Ubuntu-Desktop20.04 --------------------------(autoinstall)
item                                 
item --gap --                        ------------------------------ Advanced options --------------------------
item --key q local                   [Q] Boot from local drive ------------------------------------------------
item --key r config                  [R] Configure settings ---------------------------------------------------
item --key s shell                   [S] Enter iPXE shell -----------------------------------------------------
item --key t reboot                  [T] Reboot ---------------------------------------------------------------
item --key u power                   [U] Shutdown -------------------------------------------------------------
item                                 
item --key x exit                    [X] Exit iPXE and continue boot ------------------------------------------
item                                 
item --key o back                    [O] Back to top menu -----------------------------------------------------

#在子菜单默认时间${submenu-timeout}到时选择默认启动项${submenu-default}
choose --timeout ${submenu-timeout} --default ${submenu-default} selected || goto cancel
set menu-timeout 0
goto ${selected}

##################################################### 云 BIOS/UEFI 公用菜单加载项 ####################################################
#====Linux====#
:clo_new_centos7-server
echo Starting CentOS ${cloud-new-centos7-version} server cloud ${platform} install
##centos系列uefi引导需要加参数initrd=initrd,且必须在vmlinux后面，否则报错“dracut-initqueue: Warning: dracut-initqueue timeout - starting timeout scripts”
kernel ${cloud-mirror-base-url}/centos/${cloud-new-centos7-version}/os/x86_64/isolinux/vmlinuz initrd=initrd.img inst.repo=${cloud-mirror-base-url}/centos/${cloud-new-centos7-version}/os/x86_64/ inst.ks=${script-base-url}/centos-installer/ks.cfg/centos7_server_bios_uefi_local_cloud.cfg 
initrd ${cloud-mirror-base-url}/centos/${cloud-new-centos7-version}/os/x86_64/isolinux/initrd.img #net.ifnames=0 biosdevname=0
boot || goto failed
iseq ${platform} efi && goto menu-uefi-cloud || goto menu-bios-cloud

:clo_new_centos7-desktop
echo Starting CentOS ${cloud-new-centos7-version} desktop cloud ${platform} install
##centos系列uefi引导需要加参数initrd=initrd,且必须在vmlinux后面，否则报错“dracut-initqueue: Warning: dracut-initqueue timeout - starting timeout scripts”
kernel ${cloud-mirror-base-url}/centos/${cloud-new-centos7-version}/os/x86_64/isolinux/vmlinuz initrd=initrd.img inst.repo=${cloud-mirror-base-url}/centos/${cloud-new-centos7-version}/os/x86_64/ inst.ks=${script-base-url}/centos-installer/ks.cfg/centos7_desktop_bios_uefi_local_cloud.cfg 
initrd ${cloud-mirror-base-url}/centos/${cloud-new-centos7-version}/os/x86_64/isolinux/initrd.img #net.ifnames=0 biosdevname=0
boot || goto failed
iseq ${platform} efi && goto menu-uefi-cloud || goto menu-bios-cloud

:clo_centos7-server
echo Starting CentOS ${cloud-centos7-version} server cloud ${platform} install
##centos系列uefi引导需要加参数initrd=initrd,且必须在vmlinux后面，否则报错“dracut-initqueue: Warning: dracut-initqueue timeout - starting timeout scripts”
kernel ${cloud-mirror-base-url}/centos-vault/${cloud-centos7-version}/os/x86_64/isolinux/vmlinuz initrd=initrd.img inst.repo=${cloud-mirror-base-url}/centos-vault/${cloud-centos7-version}/os/x86_64/ inst.ks=${script-base-url}/centos-installer/ks.cfg/centos7_server_bios_uefi_local_cloud.cfg 
initrd ${cloud-mirror-base-url}/centos-vault/${cloud-centos7-version}/os/x86_64/isolinux/initrd.img #net.ifnames=0 biosdevname=0
boot || goto failed
iseq ${platform} efi && goto menu-uefi-cloud || goto menu-bios-cloud

:clo_centos7-desktop
echo Starting CentOS ${cloud-centos7-version} desktop cloud ${platform} install
##centos系列uefi引导需要加参数initrd=initrd,且必须在vmlinux后面，否则报错“dracut-initqueue: Warning: dracut-initqueue timeout - starting timeout scripts”
kernel ${cloud-mirror-base-url}/centos-vault/${cloud-centos7-version}/os/x86_64/isolinux/vmlinuz initrd=initrd.img inst.repo=${cloud-mirror-base-url}/centos-vault/${cloud-centos7-version}/os/x86_64/ inst.ks=${script-base-url}/centos-installer/ks.cfg/centos7_desktop_bios_uefi_local_cloud.cfg 
initrd ${cloud-mirror-base-url}/centos-vault/${cloud-centos7-version}/os/x86_64/isolinux/initrd.img #net.ifnames=0 biosdevname=0
boot || goto failed
iseq ${platform} efi && goto menu-uefi-cloud || goto menu-bios-cloud

# cloud_ubuntu_18_20_server_desktop_netboot_uefi_bios（d-i）
#
# 系统内核引导参数说明：
# - boot=casper：指定由casper程序引导映像（可省略不写）\
#   casper的man手册：http://manpages.ubuntu.com/manpages/precise/man7/casper.7.html
# - auto=true：开启自动安装
# - url=...cfg：指定d-i脚本路径（支持http、tftp、ftp、nfs）
# - tasks=minimal（ubuntu-desktop）：最小化安装，还是安装图形桌面
# - priority=critical：用来跳过弹窗验证，否则自动化安装会卡在设置hostname界面
# - suite=bionic：设置系统镜像源的系统版本号
# - DEBCONF_DEBUG=5：控制台 console Alt + F4 输出更详细日志
# - --- 之后的参数，保留追加到 grub 引导参数
# - ipv6.disable=1 net.ifnames=0 biosdevname=0：禁用ipv6，设置网卡名为eth0格式
# d-i引导参数别名表：https://help.ubuntu.com/20.04/installation-guide/amd64/apbs02.html#preseed-aliases
:clo_ubuntu-Server1804
echo Starting Ubuntu 18.04 server cloud ${platform} install
set script-url tftp://${next-server}/ubuntu-installer/auto-install/debian-installer
kernel ${cloud-mirror-base-url}/ubuntu/dists/bionic/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/linux initrd=initrd.gz \
boot=casper auto=true url=${script-url}/cloud_server_desktop_bios_uefi.cfg \
tasks=minimal priority=critical suite=bionic DEBCONF_DEBUG=5 \
--- ipv6.disable=1 net.ifnames=0 biosdevname=0 #libraries:libraries/restart-without-asking=true #BOOTIF=01-${net0/mac:hexhyp} interface=auto #interface=ens33
initrd ${cloud-mirror-base-url}/ubuntu/dists/bionic/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/initrd.gz
boot || goto failed
iseq ${platform} efi && goto menu-uefi-cloud || goto menu-bios-cloud

:clo_ubuntu-desktop1804
echo Starting Ubuntu 18.04 desktop cloud ${platform} install
set script-url tftp://${next-server}/ubuntu-installer/auto-install/debian-installer
kernel ${cloud-mirror-base-url}/ubuntu/dists/bionic/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/linux initrd=initrd.gz \
boot=casper auto=true url=${script-url}/cloud_server_desktop_bios_uefi.cfg \
tasks=ubuntu-desktop priority=critical suite=bionic DEBCONF_DEBUG=5 \
--- ipv6.disable=1 net.ifnames=0 biosdevname=0 #libraries:libraries/restart-without-asking=true #BOOTIF=01-${net0/mac:hexhyp} interface=auto #interface=ens33
initrd ${cloud-mirror-base-url}/ubuntu/dists/bionic/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/initrd.gz
boot || goto failed
iseq ${platform} efi && goto menu-uefi-cloud || goto menu-bios-cloud

:clo_ubuntu-Server2004
echo Starting Ubuntu 20.04 server cloud ${platform} install
set script-url tftp://${next-server}/ubuntu-installer/auto-install/debian-installer
kernel ${cloud-mirror-base-url}/ubuntu/dists/focal/main/installer-amd64/current/legacy-images/netboot/ubuntu-installer/amd64/linux initrd=initrd.gz \
boot=casper auto=true url=${script-url}/cloud_server_desktop_bios_uefi.cfg \
tasks=minimal priority=critical suite=focal DEBCONF_DEBUG=5 \
--- ipv6.disable=1 net.ifnames=0 biosdevname=0 #libraries:libraries/restart-without-asking=true #BOOTIF=01-${net0/mac:hexhyp} interface=auto #interface=ens33
initrd ${cloud-mirror-base-url}/ubuntu/dists/focal/main/installer-amd64/current/legacy-images/netboot/ubuntu-installer/amd64/initrd.gz
boot || goto failed
iseq ${platform} efi && goto menu-uefi-cloud || goto menu-bios-cloud

:clo_ubuntu-desktop2004
echo Starting Ubuntu 20.04 desktop cloud ${platform} install
set script-url tftp://${next-server}/ubuntu-installer/auto-install/debian-installer
kernel ${cloud-mirror-base-url}/ubuntu/dists/focal/main/installer-amd64/current/legacy-images/netboot/ubuntu-installer/amd64/linux initrd=initrd.gz \
boot=casper auto=true url=${script-url}/cloud_server_desktop_bios_uefi.cfg \
tasks=ubuntu-desktop priority=critical suite=focal DEBCONF_DEBUG=5 \
--- ipv6.disable=1 net.ifnames=0 biosdevname=0 #libraries:libraries/restart-without-asking=true #BOOTIF=01-${net0/mac:hexhyp} interface=auto #interface=ens33
initrd ${cloud-mirror-base-url}/ubuntu/dists/focal/main/installer-amd64/current/legacy-images/netboot/ubuntu-installer/amd64/initrd.gz
boot || goto failed
iseq ${platform} efi && goto menu-uefi-cloud || goto menu-bios-cloud

# cloud_ubuntu_21_22_server_desktop_netboot(live)_uefi_bios（subiquity）
#
# 系统内核引导参数说明：
# -
#TODO:clo_ubuntu-Server2204(参考local-menu.ipxe菜单中的:ul(bl)_ubuntu-Server2004)

#=====Advanced options====#
:local
sanboot --no-describe --drive 0x80

:config
config
iseq ${platform} efi && goto menu-uefi-cloud || goto menu-bios-cloud

:shell
echo Type 'exit' to get the back to the menu
shell
set menu-timeout 0
set submenu-timeout 0
iseq ${platform} efi && goto menu-uefi-cloud || goto menu-bios-cloud

:reboot
reboot

:power
poweroff

:exit
exit

:cancel
echo You cancelled the menu, dropping you to a shell

:failed
echo Booting failed, dropping to shell
goto shell

#子菜单返回主菜单定义
:back
set submenu-timeout 0
clear submenu-default
chain --autofree boot.ipxe.cfg ||
#chain --replace --autofree ${boot-url}/ipxe-menu/mymenu.ipxe
chain --replace --autofree mymenu.ipxe
#iseq ${platform} efi && goto EFI_MENU || goto BIOS_MENU
