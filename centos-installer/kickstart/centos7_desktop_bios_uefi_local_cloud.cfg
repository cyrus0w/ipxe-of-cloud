#Kickstart(ks) for desktop
#作者：cyrus0w
#创建时间：2021/3/12 22:07
#更新时间：2022/7/10 23:30
#网络环境：无要求
#适用系统：centos7
#声明：本脚本仅在centos7测试过，8系统理论也可以用！
#platform=x86, AMD64, 或 Intel EM64T
#脚本语法检查：yum install pykickstart && ksvalidator /path/to/kickstart.ks
#比较不同系统版本之间的语法差异：ksverdiff -f RHEL6 -t RHEL7
#官方文档：https://docs.centos.org/en-US/centos/install-guide/Kickstart2/

#    ___  ___   ________
#   / _ )/ _ | / __/ __/
#  / _  / __ |_\ \/ _/  
# /____/_/ |_/___/___/  
#                       
# 基础设置
#
# 启用安装过程的SSH连接(创建临时用户，需要在ipxe菜单内核引导中加上inst.sshd)
# 加密密码获得方式（sha512）[123...]：python -c 'import crypt,getpass;pw=getpass.getpass();print(crypt.crypt(pw) if (pw==getpass.getpass("Confirm: ")) else exit())'
sshpw --username=installer $6$dqePcQBop8RLmS46$ERIqwSDz6cLZVXYPb/8n2LQBv.rEOa.CSU0Xikxqd7y9tmeavkFw36hUvTj9266JVMJFeGlQZz7za3qejz95J1 --iscrypted

# 安装模式选项：图形化安装graphical(默认模式)、文本安装text、完全非交互式的命令行cmdline
text
# 允许通过 VNC 远程查看”图形“安装
# 问题：这里用的是vnc的连接模式，什么是vnc连接模式？
# 答：用户这边的客户端启动监听模式（windows可用tightvnc工具启动监听模式;linux可用tigervnc工具执行[vncviewer -listen PORT]），Anaconda安装程序启动的VNCserver会主动寻找用户这边的客户端并连接。
# 注意：vnc功能开启后，如果一直连接不上，系统也不会继续安装！
# --host=：vnc客户端所在的地址
# --port=：vnc客户端开启监听的端口号
# --password=：客户端连接服务端的密码
#vnc --host=192.168.71.1 --port=5500
# 启用或关闭软件
services --disabled=cups
services --enabled=ntpd,sshd
# 键盘布局
keyboard us
# 设置安装期间使用的语言和安装后系统上使用的默认语言(不要设置中文)
lang en_US
# 禁用SELinux
selinux --disabled
# 禁用防火墙
firewall --disabled
# 系统时区
#timezone  Asia/Shanghai --ntpservers=ntp1.aliyun.com,ntp2.aliyun.com,ntp3.aliyun.com
timezone  Asia/Shanghai
# 记录安装日志，并将日志发送给syslog服务器
# --level级别有：debug，info，warning，error，或critical。
#logging --level=info --host=192.168.94.1 --port=514
# 自动同意许可协议（6系统没有）
eula --agreed
# 安装成功后做的操作
# halt：关机，等同于命令shutdown -h
# poweroff：关闭系统电源，依赖能与内核交互的硬件组件，等效于shutdown -p命令
# shutdown：关机，等效于halt
# reboot：重启，等效于shutdown -r命令
#   --eject- 尝试在重新启动前弹出可启动媒体（DVD、USB 或其他媒体），避免无限循环安装
reboot --eject
# 配置图形化X Window系统（图形化桌面必须加上此配置，否则中断自动安装并提示手动设置X Window）
# --startxonboot：在已安装的系统上使用图形登录
xconfig --startxonboot

#    _  ____________  _________  _  _______________
#   / |/ / __/_  __/ / ___/ __ \/ |/ / __/  _/ ___/
#  /    / _/  / /   / /__/ /_/ /    / _/_/ // (_ /
# /_/|_/___/ /_/    \___/\____/_/|_/_/ /___/\___/
#
# 常规网络设置
#
# Network information，默认是dhcp，也可以设置静态ip
network --bootproto=dhcp --onboot=yes --device=eth0 --ipv6=auto --hostname=centos001
#network --bootproto=static --onboot=yes --device=eth0 --gateway=192.168.94.1 --ip=192.168.94.21 --netmask=255.255.255.0 --nameserver=114.114.114.114,8.8.8.8 --hostname=centos7

# 特殊网络设置
#
# bond设置
#network --device=bond0 --bondslaves=eth1,eth2 --bondopts=mode=active-backup,balance-rr;primary=eth1
# vlan设置
#network --device=eth1 --vlanid=171 --interfacename=vlan171
# 网桥设置
#network --device=bridge0 --bridgeslaves=eth1

#    ___  ___   ___  ________________________  _  __
#   / _ \/ _ | / _ \/_  __/  _/_  __/  _/ __ \/ |/ /
#  / ___/ __ |/ , _/ / / _/ /  / / _/ // /_/ /    /
# /_/  /_/ |_/_/|_| /_/ /___/ /_/ /___/\____/_/|_/
#
# 清除分区
#
# clearpart：在创建新分区之前从系统中删除分区（注意：使用了此命令，part --onpart命令将不能在逻辑分区上使用！）\
# 说明：clearpart会根据引导项(bios还是uefi)自动设置磁盘分区格式(mbr还是gpt)，但我只想要gpt格式，无论是bios还是uefi，所以换了一个方案，\
#       注释掉clearpart，在%pre脚本中使用parted工具将磁盘设置为gpt格式，此设置会清空所有分区及内容。
#   --initlabel：给磁盘创建默认标签label（例如，x86的msdos），多个以,分隔
#   --all: 清除所有磁盘分区，包括网络存储，慎重使用！！
#   --drives=sda --all：指定清除的分区磁盘，多个以,分隔
#clearpart --drives=sda --all
# ignoredisk --only-use=：仅擦除指定磁盘(也可配合自动分区使用)
#ignoredisk --only-use=sda
# 初始化磁盘上发现的任何无效的分区及内容 \
#（当在带有未格式化的直接访问存储设备（DASD）磁盘的IBM Z系统上执行安装时，需要这个命令，否则未格式化的磁盘不会在安装过程中被格式化和使用。）
zerombr

# 手动分区
#
# biosboot --fstype=biosboot：用来在bios+gpt类型的系统上创建一个1MB的引导分区（配合pre脚本中用命令将磁盘专为gpt格式）
# --size的单位: M --fstype是指定文件系统类型，例如:ext4、xfs
# --ondisk=sdb: 在指定磁盘上创建分区，多个分区指定到同一个磁盘后，系统随机使用分区名
# --onpart=sda1：指定某个磁盘的某个分区,可用来将某个分区指定到自定义的分区名上
# --label=OEMDRV：设置分区标签
# --encrypted --passphrase=123456：给某个分区加密(注意：不能加密boot分区)，测试没啥意思，效果是开机的时候要求输入密码，不然进不了系统
# --size=1 --grow：grow表示使用剩余所有空间，配合--size=1设置最小尺寸
part biosboot --fstype=biosboot --size=1 --ondisk=sda
part /boot/efi --fstype="efi" --size=250 --ondisk=sda --fsoptions="defaults,uid=0,gid=0,umask=0077,shortname=winnt"
part /boot --fstype="ext4" --size=500 --ondisk=sda --label=boot
part swap --fstype="swap" --size=2000 --ondisk=sda --label=swap
part / --fstype="ext4" --size=1 --grow --ondisk=sda --label=rootfs

# 自定义的分区和grub相关脚本(结合%pre和%post)
#
# NEVER ever place zerombr here, it breaks automated installation
###%include /tmp/partition.ks
###%include /tmp/post_partition.ks

#    __  __________  ___  ____  ___
#   /  |/  /  _/ _ \/ _ \/ __ \/ _ \
#  / /|_/ // // , _/ , _/ /_/ / , _/
# /_/  /_/___/_/|_/_/|_|\____/_/|_|
#
# 指定安装源（一般在ipxe菜单中已指定inst.repo）
#
# 从指定url安装(支持http、https)
# --noverifyssl：连接到HTTPS服务器时禁用 SSL 验证
#install
#url --url="http://192.168.2.199/pub/os/centos7.8" --noverifyssl
# 从指定nfs安装
#install
#nfs --server=172.17.22.22 --dir=/nfs
# 从系统上的第一个光驱安装
#install
#cdrom

#   __  _____________
#  / / / / __/ __/ _ \
# / /_/ /\ \/ _// , _/
# \____/___/___/_/|_|
#
# 设置用户名/密码、组
#
# Root password (--plaintext mvt...) 
rootpw --iscrypted $6$/NOmHB1DMW8$9hXOGPJeuAfWYE.BKC2m3wj8iS37119YprrnSR.7GNntFOvmOcrCnaeEhVItvs.faGnlpJa8OoQXknMV5Rhnd/
# 创建用户,为了uid和gid初始值为5000
# 加密密码获得方式（sha512）[123...]：python -c 'import crypt,getpass;pw=getpass.getpass();print(crypt.crypt(pw) if (pw==getpass.getpass("Confirm: ")) else exit())'
user --name=ops --homedir=/home/ops --iscrypted --password=$6$dqePcQBop8RLmS46$ERIqwSDz6cLZVXYPb/8n2LQBv.rEOa.CSU0Xikxqd7y9tmeavkFw36hUvTj9266JVMJFeGlQZz7za3qejz95J1 --shell=/bin/bash --uid=5000 --gid=5000
# 新建组
#group --name=ops --gid=5001

# 系统登录认证设置
#
# 加入ldap（必须安装nss-pam-ldapd包）
#auth --enableldap --enableldapauth --ldapserver="ldaps://mgt" --ldapbasedn="dc=hpc,dc=com" --disableldaptls --ldaploadcacert=http://mgt/ca-cert.pem --updateall)
# 加入nis
#auth --enablenis --nisdomain="xxx.com" --nisserver="nis server"
# 使用密码认证
auth  --useshadow  --passalgo=sha512

#    ___  ___  _______ _____  _________
#   / _ \/ _ |/ ___/ //_/ _ |/ ___/ __/
#  / ___/ __ / /__/ ,< / __ / (_ / _/
# /_/  /_/ |_\___/_/|_/_/ |_\___/___/
#
# 安装包选择
# --multilib：自动在64位系统上安装32位软件包（如果有，一般不开启）(如：glibc.i686)
# --ignoremissing：忽略源中缺少的任何包、组和环境，而不是停止安装以询问是否应该中止或继续安装
# --retries=：设置Yum重试下载的次数，默认值10（6系统没有）
# --timeout=：设置Yum超时时间，默认值30（6系统没有）
# NOTE: 可以指定包的id或名称，能在DVD镜像中的repodata/*-comps-variant.architecture.xml文件中获得
# 环境包(只能选一个)：
#   @^Minimal Install: 最小化安装
#   @^Infrastructure Server: 安装基本的centos，不含桌面
#   @^Virtualization Host: KVM虚拟化环境
#   @^GNOME Desktop：GNOME桌面环境
#   @^KDE Plasma Workspaces：KDE桌面环境
# 组包：
#   @Core: 核心组包，默认已选择
#   @X Window System：图形桌面的后台组件
#   @Development：开发工具和程序库(包含gcc、make、cmake、rpm-build、expect、git等)
#   @Compatibility Libraries：兼容性程序库
#   -ipa*fonts：排除组中的包
# 单个包：
#   docbook*（可使用通配符*）
%packages --ignoremissing --retries=3 --timeout=7
#@^Minimal Install
@^GNOME Desktop
@X Window System
@Core
@compat-libraries
@development
wget
curl
util-linux
net-tools
lrzsz
expect
bash-completion
vim
telnet
environment-modules
ntpdate
ntp
tcpdump
bind-utils
strace
open-vm-tools
#nss-pam-ldapd
#cloud-init

%end

#   ________  __  _____
#  / ___/ _ \/ / / / _ )
# / (_ / , _/ /_/ / _  |
# \___/_/|_|\____/____/
#
# bootloader：指定应如何安装引导加载程序
#   --append=：指定额外的内核参数（注意：这里只是作用到grub引导菜单中，对第一次安装过程没有作用，如果想对第一次安装过程就有作用，需要到ipxe引导中加上这些参数）
#     net.ifnames=0 biosdevname=0 ：将网卡名设置为eth0这种形式
#     ipv6.disable=1：禁用ipv6
#     cgroup_enable=memory swapaccount=1 : k8s中需要，用来控制对容器的内存使用上限
#     nopti noibrs noibpb：消除或缓解Meltdown 和 Spectre 推测执行漏洞
#   --driveorder=： 指定哪个驱动器在 BIOS 引导顺序中排在第一位
#   --location=：指定写入引导记录的位置
#     mbr：默认选项。自动识别GPT和MBR磁盘，并加载引导程序，直白点意思就是同时支持引导uefi+bios
#   --iscrypted --password=: 给grub2菜单设置访问的加密密码，用户名为root。使用grub2-mkpasswd-pbkdf2命令设置加密密码（1~6）
#   --timeout=：grub2菜单等待引导的时间（秒）
bootloader --append="net.ifnames=0 biosdevname=0 ipv6.disable=1 cgroup_enable=memory swapaccount=1 nopti noibrs noibpb" --driveorder=sda --location=mbr --timeout=5 --iscrypted --password=grub.pbkdf2.sha512.10000.4E5439A7A1D5DF75AFBD62A826B13F9F4A250E28DF934B14FE9DAC67A83D57BB948A77ADF0065100486C2433F43EBBD408D5D533BBF076692AEFABFADC19494E.7B79FE3C9AA0AD0E4CDB007935329929DB5BA6B984C3D8DD34E87C3361986A6FADD0856032524B3270BFAC8D34ED3DA1A760276BBAF923892D53769EBA5A6132

#    ___  ___  ____
#   / _ \/ _ \/ __/
#  / ___/ , _/ _/  
# /_/  /_/|_/___/  
#  
# 在 Kickstart 文件被解析后但在安装开始之前立即在系统上运行的脚本 
# 注意：此pre脚本必须放在Kickstart文件的末尾，和post脚本顺序可颠倒！
# --erroronfail：如果脚本失败，则显示错误并停止安装。错误消息将引导您到记录失败原因的位置。
# --log=：将脚本的输出记录到指定的日志文件中
%pre --log=/mnt/sysimage/root/ks-pre.log
#!/bin/bash

#--------------------------------------------------------------------------
# 设置磁盘为gpt格式，取代clearpart
#--------------------------------------------------------------------------
parted -s /dev/sda mklabel gpt

#--------------------------------------------------------------------------
# 配置硬raid（需要的工具介绍：https://github.com/zhangguanzhang/Installer/blob/master/docs/linux-start.md#user-content-%E5%88%A4%E6%96%AD%E8%87%AA%E5%B7%B1%E7%9A%84%E9%98%B5%E5%88%97%E5%8D%A1%E5%BA%94%E8%AF%A5%E4%BD%BF%E7%94%A8%E5%93%AA%E4%B8%AAcli）
#--------------------------------------------------------------------------
# 注意：pre脚本中不能解析域名，因为此时系统尚未配置DNS服务
#wget http://10.1.0.2/soft/xxx
#chmod u+x xxx
#xxx 创建阵列
#...
#arcconf getconfig 1 ld | grep -qw 'No logical'
#if [ "$?" -eq 0 ];then
#
#    #获取实际硬盘的Channel id存成数组:0,1  0,0  取最后两个槽位做系统盘的raid1
#    hardDiskChannelIDArray=( $(arcconf getconfig 1 pd | grep Channel | tac | awk -F'[: ()]+' 'NR!=1&&NR<4{print $6}') )
#    arcconf task start 1 device all initialize noprompt  #初始化所有硬盘
#    #              控制器id               容量  raid级别
#    arcconf create    1     logicaldrive Wcache WBB max    1   ${hardDiskChannelIDArray[@]//,/ }  noprompt
#
#fi

#--------------------------------------------------------------------------
# 配置管理口自定义的静态地址
#--------------------------------------------------------------------------
# 获取eth1的信息,该字段为8
#ipmitool raw 0x0c 0x02   0x08   0x04 0x00 0x00 | grep -qw '02'   # dhcp
#if [ "$?" -eq 0 ];then
#    ipmitool lan set 8 ipsrc static
#fi
#ipmitool lan set 8 ipaddr {{.IPMIIP}}
#ipmitool lan set 8 netmask {{.IPMIMask}}
#ipmitool lan set 8 defgw ipaddr {{.IPMIGw}}
##ipmitool chassis bootdev disk options=efiboot,persistent # force boot from desik, and set the mode to uefi
##ipmitool raw 0x00 0x08 0x05  0xE0 0x08  0x00 0x00 0x00 #uefi启动,强制boot from disk

#--------------------------------------------------------------------------
# 在tty终端手动选择磁盘分区（取代ks自带的分区clearpart、zerombr）
#--------------------------------------------------------------------------
# hard drives
###drives=""
###removable_drives=""
###for drv in `ls -1 /sys/block | grep "sd\|hd\|vd\|cciss"`; do
###    if !(blkid | grep -q "${drv}.*CloudOS") && (lsblk | grep -q "${drv}") && \
###    (! ls -l /dev/disk/by-path/ | grep ${drv} | grep -q 'fc'); then
###        if (grep -q 0 /sys/block/${drv}/removable); then
###            drives="${drives} ${drv}"
###        else
###            removable_drives="${removable_drives} ${drv}"
###        fi
###    fi
###done
###default_drive=`echo ${drives} ${removable_drives} | awk '{print $1}'`
###
###installdrive=${installdrive:-undefined}
###forceformat=${forceformat:-no}
###for I in $(cat /proc/cmdline); do
###  case "$I" in
###    *=*)
###      if ! [[ "${I}" =~ "." ]]; then eval "$I"; fi
###    ;;
###  esac
###done
###
###set ${drives} ${removable_drives}
###numdrives=`echo $#`
###
###tgtdrives="${installdrive}"
###
###function confirm_format {
###  check_drive="$1"
###  local confirm_format="no"
###
###  if [[ "$forceformat" == "yes" ]] ; then
###    return 0
###  fi
###
###  if parted -s /dev/$check_drive print &>/dev/null ; then
###    echo
###    echo "$check_drive drive contains partition table:"
###    parted -s /dev/$check_drive print
###    echo
###    read -p "Are you sure you want to erase ALL data on disk $check_drive? (y/N)" confirm_format
###    if [[ "$confirm_format" == "y" ]] || [[ "$confirm_format" == "Y" ]] || [[ "$forceformat" == "yes" ]]; then
###      read -p "Warning! ALL data will be lost! continue? (y/N)" confirm_format
###      if [[ "$confirm_format" == "y" ]] || [[ "$confirm_format" == "Y" ]] || [[ "$forceformat" == "yes" ]]; then
###        return 0
###      else
###        return 1
###      fi
###    else
###      return 1
###    fi
###  else
###    return 0
###  fi
###}
###
###format_confirmed="no"
###min_tgtdrivessize=512000
###
###if [ $numdrives -lt 1 ]; then
###    exec < /dev/tty3 > /dev/tty3 2>&1
###    chvt 3
###    clear
###    echo
###    echo '********************************************************************'
###    echo '*                            E R R O R                             *'
###    echo '*                                                                  *'
###    echo '*      There is no suitable media available for installation.      *'
###    echo '*                Please attach a drive and try again.              *'
###    echo '*                                                                  *'
###    echo '********************************************************************'
###    echo
###    read -p "Press Enter to shut down the system: " _
###    poweroff
###else
###    exec < /dev/tty3 > /dev/tty3 2>&1
###    chvt 3
###    clear
###    read -t 5 -n1 char
###    if [[ ${char} == 's' ]]; then
###        clear
###        read -p "Please input the minimum size of disk (GB): " min_tgtdrivessize
###        if [[ "${min_tgtdrivessize}" =~ ^[1-9][0-9]* ]]; then
###            let min_tgtdrivessize=min_tgtdrivessize*1024
###        else
###            min_tgtdrivessize=512000
###        fi
###    fi
###    clear
###    chvt 1
###fi
###
###
###if [ ${numdrives} -gt 1 ] || [ `echo ${drives} | wc -w` -eq 0 ] ; then
###    exec < /dev/tty3 > /dev/tty3 2>&1
###    chvt 3
###    while [ "${tgtdrives}" = "undefined" ]; do
###        clear
###        echo
###        echo '********************************************************************************'
###        echo '*                                 W A R N I N G                                *'
###        echo '*                                                                              *'
###        echo '*  Which of the detected hard drives do you want to be used as                 *'
###        echo '*  the installation target?                                                    *'
###        echo '*                                                                              *'
###        echo '********************************************************************************'
###        echo
###        echo -e "Disk\t Size\t Label   \t Model"
###        for drive in ${drives} ${removable_drives}; do
###            model=`parted -s /dev/$drive print 2>/dev/null | grep Model | awk -F: '{print $2}'`
###            part_table=`parted -s /dev/$drive print 2>/dev/null | grep 'Partition Table' | awk -F: '{print $2}'`
###            size=`parted -s /dev/$drive print 2>/dev/null | grep 'Disk /' | awk -F: '{print $2}'`
###            echo -e "$drive\t$size\t$part_table    \t$model"
###        done
###        echo
###        echo "Possible choices"
###        echo "Persistent drives: ${drives}"
###        echo "Removable drives: ${removable_drives}"
###        echo
###        if [ `echo ${drives} | wc -w` -eq 1 ] ; then
###            read -t 30 -p "Choose hard drive: " tgtdrives || tgtdrives=$default_drive
###	elif [[ -z "${drives}" && `echo ${removable_drives} | wc -w` -eq 1 ]];then
###	    read -t 30 -p "Choose hard drive: " tgtdrives || tgtdrives=$removable_drives
###        else
###            read -p "Choose hard drive: " tgtdrives
###        fi
###
###        for tgtdrive in $tgtdrives; do
###            match="no"
###            for drive in ${drives[@]} ${removable_drives[@]}; do
###                if [[ "$drive" == "$tgtdrive" ]] && match="yes" ; then
###                    break
###                fi
###            done
###            [[ $match == "no" ]] && break
###        done
###
###        if [[ "$match" == "yes" ]]; then
###            for tgtdrive in $tgtdrives; do
###                format_confirmed="no"
###                if confirm_format $tgtdrive ; then
###                  format_confirmed="yes"
###                else
###                  tgtdrives="undefined"
###                  read -p "You may select another disk. Press Enter to continue." _
###                  break
###                fi
###            done
###        elif [[ "$match" == "no" ]]; then
###          tgtdrives="undefined"
###          read -p "Invalid choice. Press Enter to continue." _
###        fi
###    done
###    clear
###    chvt 1
###else
###    tgtdrives=`echo ${drives} | sed -e "s/^\s*//" -e "s/\s*$//"`
###fi
###
#### verify tgtdrives is at least 500GB
###tgtdrivessize=0
###for tgtdrive in $tgtdrives; do
###  let tgtdrivessize=$tgtdrivessize+$(( $(cat "/sys/class/block/${tgtdrive}/size") / 2 / 1024 ))
###done
###
####if [ $tgtdrivessize -lt $min_tgtdrivessize ]; then
####    exec < /dev/tty3 > /dev/tty3 2>&1
####    chvt 3
####    clear
####    echo
####    echo '********************************************************************'
####    echo '*                            E R R O R                             *'
####    echo '*                                                                  *'
####    echo "*  Your disk is under $(($min_tgtdrivessize/1024))GB in size. Installation cannot continue. "
####    echo '*             Restart installation with a larger disk.             *'
####    echo '*                                                                  *'
####    echo '********************************************************************'
####    echo
####    read -p "Press Enter to restart: " _
####    reboot
####fi
###
###if [ "$format_confirmed" != "yes" ] ; then
###  exec < /dev/tty3 > /dev/tty3 2>&1
###  chvt 3
###  for tgtdrive in $tgtdrives; do
###      if ! confirm_format $tgtdrive ; then
###          clear
###          echo
###          echo '********************************************************************'
###          echo '*                            E R R O R                             *'
###          echo '*                                                                  *'
###          echo "*           Disk $tgtdrive contains active partition(s).            "
###          echo '*        Installation cannot continue without confirmation.        *'
###          echo '*                                                                  *'
###          echo '********************************************************************'
###          echo
###          read -p "Press Enter to restart: " _
###          reboot
###      fi
###  done
###  chvt 1
###fi
###
#### paths in /dev have "/" instead of "!" for cciss devices
###tgtdrives=$(echo $tgtdrives | sed -e 's/!/\//')
###tgtdrives_arr=(${tgtdrives})
###
###vgdisplay -c | cut -d':' -f1 | xargs vgremove -ff
###
###for tgtdrive in ${tgtdrives_arr[@]}; do
###  dd if=/dev/zero of=/dev/${tgtdrive} bs=10M count=10
###  sleep 3
###  hdparm -z /dev/${tgtdrive}
###  parted -s /dev/${tgtdrive} mklabel gpt
###done
###
####parted -a none -s /dev/${tgtdrives_arr[0]} unit MiB mkpart primary 0% 24
####parted -s /dev/${tgtdrives_arr[0]} set 1 bios_grub on
####parted -a none -s /dev/${tgtdrives_arr[0]} unit MiB mkpart primary fat16 24 224
####parted -s /dev/${tgtdrives_arr[0]} set 2 boot on
####parted -a none -s /dev/${tgtdrives_arr[0]} unit MiB mkpart primary 224 732
###
###sleep 3
###hdparm -z /dev/${tgtdrives_arr[0]}
###
#### partition
###
#### This adds support for the p seperator required for cciss devices
###if echo ${tgtdrives_arr[0]} | grep -q -e cciss ; then
###    bootdev=${tgtdrives_arr[0]}p
###else
###    bootdev=${tgtdrives_arr[0]}
###fi
###
####cat << EOF > /tmp/partition.ks
###pv_index=1
###
###echo "part biosboot --fstype=biosboot --size=1 --onpart=/dev/${bootdev}1" >> /tmp/partition.ks
###echo "part /boot --fstype="ext4" --size=500 --fsoptions=\"defaults,uid=0,gid=0,umask=0077,shortname=winnt\" --onpart=/dev/${bootdev}3 --label=boot --encrypted --passphrase=123456" >> /tmp/partition.ks
###echo "part /boot/efi --size=250 --onpart=/dev/${bootdev}2 --label=efi" >> /tmp/partition.ks
###for tgtdrive in ${tgtdrives}; do
###  echo "part pv.00$pv_index --ondisk=${tgtdrive} --size=1 --grow" >> /tmp/partition.ks
###  pv_num_arr[$pv_index]="pv.00$pv_index"
###  let pv_index++
###done
###
###echo "volgroup centos ${pv_num_arr[*]}" >> /tmp/partition.ks
###echo "logvol swap --vgname=centos --size=2048 --name=swap --label=swap" >> /tmp/partition.ks
####echo "logvol / --vgname=centos --maxsize=51200 --percent=40 --name=root --fstype=ext4" >> /tmp/partition.ks
###echo "logvol / --vgname=centos --size=1 --grow --name=root --fstype=ext4 --label=rootfs" >> /tmp/partition.ks
####let vms_num=$tgtdrivessize-15000
####echo "logvol /vms --vgname=centos --size=${vms_num}  --name=vms --fstype=ext4" >> /tmp/partition.ks
####EOF
###
#### Anaconda can not install grub 0.97 on disks which are >4T.
#### The reason is that grub does not support such large geometries
#### and it simply thinks that the cylinder number has negative value.
#### Here we just set geometry manually so that grub thinks that disk
#### size is equal to 1G.
#### 130 cylinders * (16065 * 512 = 8225280 bytes) = 1G
###echo "%post --nochroot --log=/mnt/sysimage/root/ks-post-partition.log" > /tmp/post_partition.ks
###echo "echo \"device (hd0) /dev/${tgtdrives_arr[0]}\" >> /tmp/grub.script" >> /tmp/post_partition.ks
###echo "echo \"geometry (hd0) 130 255 63\" >> /tmp/grub.script" >> /tmp/post_partition.ks
###echo "echo \"root (hd0,2)\" >> /tmp/grub.script" >> /tmp/post_partition.ks
###echo "echo \"install /grub/stage1 (hd0) /grub/stage2 p /grub/grub.conf\" >> /tmp/grub.script" >> /tmp/post_partition.ks
###echo "echo quit >> /tmp/grub.script" >> /tmp/post_partition.ks
###echo "cat /tmp/grub.script | chroot /mnt/sysimage /sbin/grub --no-floppy --batch" >> /tmp/post_partition.ks
###echo "%end" >> /tmp/post_partition.ks

%end		 

#    ___  ____  __________
#   / _ \/ __ \/ __/_  __/   
#  / ___/ /_/ /\ \  / /
# /_/   \____/___/ /_/
#
# 安装完成重启之前系统上运行的脚本 
# 注意：1.此post脚本必须放在Kickstart文件的末尾，和pre脚本顺序可颠倒！
#       2.因为post是在chroot中运行，如果网卡设置的是静态ip(指定了DNS)，则在post中可以解析域名；如果是dhcp，则/etc/resolv.conf文件还没有完成，所以在post中无法解析域名！
# --erroronfail：如果脚本失败，则显示错误并停止安装。错误消息将引导您到记录失败原因的位置。
# --log=：将脚本的输出记录到指定的日志文件中
%post --log=/root/ks-post.log
#!/bin/sh
(
set -x

#--------------------------------------------------------------------------
# 这里post中boot部分是为了efi引导做的
#--------------------------------------------------------------------------
/bin/mkdir -p /boot/efi/EFI/BOOT
\cp -r /boot/* /boot/efi/
\cp /boot/efi/EFI/centos/grub.efi /boot/efi/EFI/BOOT/BOOTX64.efi
\cp /boot/grub2/grub.conf /boot/efi/EFI/BOOT/BOOTX64.conf
\cp /boot/grub/splash.xpm.gz /boot/efi/EFI/BOOT/splash.xpm.gz


#--------------------------------------------------------------------------
# 在启动过程中禁用分层进度条,并设置启动画面为文本形式
#--------------------------------------------------------------------------
/bin/sed -i -e 's/ rhgb//' -e 's/ quiet//'  /boot/grub2/grub.cfg
/bin/sed -i -e 's/ rhgb//' -e 's/ quiet//'  /etc/grub2.cfg
/bin/sed -i -e 's/ rhgb//' -e 's/ quiet//'  /etc/default/grub

plymouth-set-default-theme text
/usr/libexec/plymouth/plymouth-update-initrd


#--------------------------------------------------------------------------
# 删除不需要的默认用户/组帐户
#--------------------------------------------------------------------------
# /usr/sbin/userdel operator
# /usr/sbin/userdel games
# /usr/sbin/userdel lp
# /usr/sbin/userdel sync
# /usr/sbin/userdel shutdown
# /usr/sbin/userdel halt
# /usr/sbin/groupdel games


#--------------------------------------------------------------------------
# 将本地 ops 用户添加到 sudoers
#--------------------------------------------------------------------------
/bin/cat <<'EOF'>> /etc/sudoers.d/ops
Defaults:ops !requiretty
ops ALL=(ALL) NOPASSWD: ALL
EOF


#--------------------------------------------------------------------------
# sync hardware clock
#--------------------------------------------------------------------------
/usr/sbin/ntpdate ntp1.aliyun.com
/sbin/hwclock --systohc --utc


#--------------------------------------------------------------------------
# configure NTP（need %packages ntp）
#--------------------------------------------------------------------------
/bin/cat <<'EOF'> /etc/ntp.conf
restrict 192.0.0.0 mask 255.0.0.0 nomodify notrap
restrict 172.0.0.0 mask 255.0.0.0 nomodify notrap
restrict 10.0.0.0 mask 255.0.0.0 nomodify notrap
driftfile /var/lib/ntp/drift
logfile /var/log/ntpd
broadcastdelay 0.008
server ntp1.aliyun.com
server ntp2.aliyun.com
server ntp3.aliyun.com
restrict ntp1.aliyun.com nomodify notrap noquery
restrict ntp2.aliyun.com nomodify notrap noquery
restrict ntp3.aliyun.com nomodify notrap noquery

server 127.127.1.0
fudge 127.127.1.0 stratum 10
EOF

/bin/cat <<'EOF'> /etc/sysconfig/ntpd
\# Drop root to id 'ntp:ntp' by default.
SYNC_HWCLOCK=yes
OPTIONS="-u ntp:ntp -p /var/run/ntpd.pid -g"
EOF

/bin/cat <<'EOF'> /etc/ntp/step-tickers
ntp1.aliyun.com
ntp2.aliyun.com
ntp3.aliyun.com
EOF

/bin/touch /var/log/ntpd

#--------------------------------------------------------------------------
# SSHD setup
#--------------------------------------------------------------------------
/bin/sed -i /etc/ssh/sshd_config \
         -e 's/.*UseDNS.*/UseDNS no/' \
         -e 's/.*GSSAPIAuthentication.*/GSSAPIAuthentication no/' \
		 -e 's/.*PasswordAuthentication.*/PasswordAuthentication yes/' \
         # -e 's/^#PermitRootLogin yes/PermitRootLogin no/'
[ -d /root/.ssh ] || mkdir /root/.ssh
echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzxqF4+W8XoKifICZIpTZ4KQo18K66pIbI5+UBLrP2Q+qaN/xz0UP8EjtVB0n7w39GyvdunkVgHp07+vFELhen2Oe9KTQnXMTCf4rC1jc2KYhMTLQE0rDP7vycdKiEXDaR4fWhwOcI1VYXanpQwtVPu5WC6UC4cHAUPsQfNV8PWRf7nZfPPgzyW2yqRbo6Hq6r7mrzS7pCPqlSQ39ST2mw/dLb9fF0wvc+XOzzWxYYFsfxxwMfdgqKPS6/N2qE/9FNG+mpfliKt3bSPVJU2iVpn2utpLJB6o/+dBZ1Xv1ctigd/bFNZLNPlSbnK8RwbRlBY4uvQKUoA60KLQEAiuTLDNernKMEGKUBYwU0gOMMIH382tgRI7LRHaDXR9v6w5+LZhLIubphEejKHQz5zDCwCSvh/gQ6F6J5q50eVqv/pUF4au1LgxDldlXI9mn3CO1ZWTYN3QChxL0soKf47zaqChpfMrSUt9A883Wo27Cno4u6cw2d47/cpMziqkDEkMU= cyrus0w@DESKTOP-1KECURU" | tee -a /root/.ssh/authorized_keys

#--------------------------------------------------------------------------
# Increase open file limmits
#--------------------------------------------------------------------------
/bin/cat <<'EOF'>> /etc/sysctl.conf

# Increases maximum open file limmit
fs.file-max = 65536

EOF

/bin/cat <<'EOF'>> /etc/security/limits.conf
# Custom configuration files in /etc/security/limits.d
EOF

/bin/cat <<'EOF'> /etc/security/limits.d/10-nofile.conf
*		soft	nofile		65535
*		hard	nofile		65535
EOF

/bin/cat <<'EOF'> /etc/security/limits.d/11-stack.conf
*		soft	stack		65535
*		hard	stack		65535
EOF


#--------------------------------------------------------------------------
# 从网络设备配置和 DNS/网关信息中删除硬编码的 UUID + MAC
#--------------------------------------------------------------------------
/bin/sed -i '/^GATEWAY*..*$/d' /etc/sysconfig/network-scripts/ifcfg-e*
/bin/sed -i '/^HOSTNAME*..*$/d' /etc/sysconfig/network-scripts/ifcfg-e*
/bin/sed -i '/^HWADDR*..*$/d' /etc/sysconfig/network-scripts/ifcfg-e*
/bin/sed -i '/^NM_CONTROLLED*..*$/d' /etc/sysconfig/network-scripts/ifcfg-e*
/bin/sed -i '/^UUID*..*$/d' /etc/sysconfig/network-scripts/ifcfg-e*


#--------------------------------------------------------------------------
# Update ifcfg-eth0 to use static ip address
#--------------------------------------------------------------------------
#/bin/rm -rf /etc/sysconfig/network-scripts/ifcfg-eth*
#/bin/cat <<'EOF'>> /etc/sysconfig/network-scripts/ifcfg-eth0
#TYPE=Ethernet
#PROXY_METHOD=none
#BROWSER_ONLY=no
#BOOTPROTO=static
#DEFROUTE=yes
#IPV4_FAILURE_FATAL=no
#IPV6INIT=no
#IPV6_AUTOCONF=no
#IPV6_DEFROUTE=no
#IPV6_FAILURE_FATAL=no
#IPV6_ADDR_GEN_MODE=stable-privacy
#NAME=eth0
#DEVICE=eth0
#ONBOOT=yes
#IPADDR=192.168.10.100
#NETMASK=255.255.255.0
#GATEWAY=192.168.10.1
#DNS1=192.168.10.1
#DOMAIN=corp.local
#EOF


#--------------------------------------------------------------------------
# Configure NetworkManager
#--------------------------------------------------------------------------
#/bin/cat <<'EOF'> /etc/NetworkManager/conf.d/11-corp.conf
#[main]
#no-auto-default=*
#dns=none
#EOF


#--------------------------------------------------------------------------
# Configure DNS
#--------------------------------------------------------------------------
#/bin/cat <<'EOF'> /etc/resolv.conf
#nameserver 10.208.10.1
#EOF

#--------------------------------------------------------------------------
# 对于root，禁用颜色“ls”，并使用旧样式排序顺序。
#--------------------------------------------------------------------------
# touch /root/.dir_colors
# 
# /bin/cat <<'EOF'>> /root/.i18n
# LC_COLLATE=C
# EOF


#--------------------------------------------------------------------------
# Setup logrotate configuration
#--------------------------------------------------------------------------
# /bin/cat <<'EOF'> /etc/logrotate.conf
# # see "man logrotate" for details
# # rotate log files monthly
# monthly
# 
# # keep 12 months worth of backlogs
# rotate 12
# 
# # create new (empty) log files after rotating old ones
# create
# 
# # uncomment this if you want your log files compressed
# compress
# 
# # RPM packages drop log rotation information into this directory
# include /etc/logrotate.d
# 
# # no packages own wtmp -- we'll rotate them here
# /var/log/wtmp {
#     create 0664 root utmp
# }
# EOF


#--------------------------------------------------------------------------
# Setup default yum repos
#--------------------------------------------------------------------------
/bin/mkdir -p /etc/yum.repos.d/bak
/bin/mv /etc/yum.repos.d/CentOS-*.repo /etc/yum.repos.d/bak/

if [ ! -f /etc/os-release ] && [ -f /etc/redhat-release ];then
    osVersion="$(grep -Eo "([0-9]+[.])[0-9]+" /etc/redhat-release)"	# exp:6.1-10...
elif [ -f /etc/os-release ] && [ -f /etc/redhat-release ];then
    osVersion="`awk '{print $(NF-1)}' /etc/redhat-release`"  # EXP:7.9.2009...
	[[ $osVersion == 7.9.2009 ]] && type="centos" || type="centos-vault"
fi
osVersionPrefix=${osVersion:0:1}
protocol="http"
chinaSource="mirrors.aliyun.com"
protocolEpel="https"
chinaSourceEpel="mirrors.tuna.tsinghua.edu.cn"

/bin/cat > /etc/yum.repos.d/CentOS${osVersionPrefix}-Base-aliyun.repo << EOF
[base]
name=CentOS-$osVersion - Base - $chinaSource
failovermethod=priority
baseurl=${protocol}://$chinaSource/$type/$osVersion/os/\$basearch/
gpgcheck=1
gpgkey=${protocol}://$chinaSource/$type/RPM-GPG-KEY-CentOS-$osVersionPrefix

#released updates 
[updates]
name=CentOS-$osVersion - Updates - $chinaSource
failovermethod=priority
baseurl=${protocol}://$chinaSource/$type/$osVersion/updates/\$basearch/
gpgcheck=1
gpgkey=${protocol}://$chinaSource/$type/RPM-GPG-KEY-CentOS-$osVersionPrefix

#additional packages that may be useful
[extras]
name=CentOS-$osVersion - Extras - $chinaSource
failovermethod=priority
baseurl=${protocol}://$chinaSource/$type/$osVersion/extras/\$basearch/
gpgcheck=1
gpgkey=${protocol}://$chinaSource/$type/RPM-GPG-KEY-CentOS-$osVersionPrefix

#additional packages that extend functionality of existing packages
[centosplus]
name=CentOS-$osVersion - Plus - $chinaSource
failovermethod=priority
baseurl=${protocol}://$chinaSource/$type/$osVersion/centosplus/\$basearch/
gpgcheck=1
enabled=0
gpgkey=${protocol}://$chinaSource/$type/RPM-GPG-KEY-CentOS-$osVersionPrefix

#contrib - packages by Centos Users
[contrib]
name=CentOS-$osVersion - Contrib - $chinaSource
failovermethod=priority
baseurl=${protocol}://$chinaSource/$type/$osVersion/contrib/\$basearch/
gpgcheck=1
enabled=0
gpgkey=${protocol}://$chinaSource/$type/RPM-GPG-KEY-CentOS-$osVersionPrefix
EOF

/bin/cat > /etc/yum.repos.d/centos${osVersionPrefix}-epel.repo << EOF
[epel]
name=Extra Packages for Enterprise Linux $osVersionPrefix - \$basearch
baseurl=${protocolEpel}://$chinaSourceEpel/epel/$osVersionPrefix/\$basearch
failovermethod=priority
enabled=1
gpgcheck=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-$osVersionPrefix

[epel-debuginfo]
name=Extra Packages for Enterprise Linux $osVersionPrefix - \$basearch - Debug
baseurl=${protocolEpel}://$chinaSourceEpel/epel/$osVersionPrefix/\$basearch/debug
failovermethod=priority
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-$osVersionPrefix
gpgcheck=0

[epel-source]
name=Extra Packages for Enterprise Linux $osVersionPrefix - \$basearch - Source
baseurl=${protocolEpel}://$chinaSourceEpel/epel/$osVersionPrefix/SRPMS
failovermethod=priority
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-$osVersionPrefix
gpgcheck=0
EOF

yum clean all

#--------------------------------------------------------------------------
# Remove UUID for /boot in fstab
#--------------------------------------------------------------------------
# /bin/sed -i "s/UUID*..*\/boot/\/dev\/sda1\t\t\/boot/" /etc/fstab


#--------------------------------------------------------------------------
# Symlink /var/tmp to /tmp
#--------------------------------------------------------------------------
/bin/rm -rf /var/tmp
/bin/ln -s /tmp /var/tmp

#--------------------------------------------------------------------------
# Enable or Disable Specific OS Services/Daemons
#--------------------------------------------------------------------------
if [[ $osVersionPrefix == 7 ]];then
   /usr/bin/systemctl enable autofs
   /usr/bin/systemctl enable ntpd
   /usr/bin/systemctl disable chronyd
   /usr/bin/systemctl disable firewalld.service
   /usr/bin/systemctl disable NetworkManager
   # /usr/bin/systemctl disable auditd
   # /usr/bin/systemctl disable mdmonitor
   /usr/bin/systemctl disable postfix
   /usr/bin/systemctl disable abrt-ccpp.service
   /usr/bin/systemctl disable abrt-oops.service
   /usr/bin/systemctl disable abrt-vmcore.service
   /usr/bin/systemctl disable abrt-xorg.service
   /usr/bin/systemctl disable abrtd.service
   /usr/bin/systemctl disable iscsi.service
   /usr/bin/systemctl disable iscsid.socket
   /usr/bin/systemctl disable iscsiuio.socket
   /usr/bin/systemctl disable libstoragemgmt.service
   # /usr/bin/systemctl disable multipathd.service
   /usr/bin/systemctl disable wpa_supplicant.service
elif [[ $osVersionPrefix == 6 ]];then
   chkconfig autofs on
   chkconfig ntpd on
   chkconfig iptables off
   chkconfig NetworkManager off
   # chkconfig auditd off					   
   # chkconfig mdmonitor off
   chkconfig postfix off
   chkconfig abrt-ccpp off
   chkconfig abrt-oops off
   chkconfig abrt-vmcore off
   chkconfig abrt-xorg off
   chkconfig abrtd off
   chkconfig iscsi off
   chkconfig iscsid off
   chkconfig iscsiuio off
   chkconfig libstoragemgmt off
   # chkconfig multipathd off
   chkconfig wpa_supplicant off
fi


#--------------------------------------------------------------------------
# 安全加固
#--------------------------------------------------------------------------
/usr/sbin/userdel -r server
/bin/chmod 600 /var/log/boot.log
/bin/chmod 600 /var/log/spooler
/bin/chmod 600 /var/log/messages
/bin/chmod 600 /var/log/secure
/bin/chmod 600 /var/log/cron
/bin/chmod 600 /var/log/maillog


#--------------------------------------------------------------------------
# 其他设置
#--------------------------------------------------------------------------
/bin/sed -i 's/1000/5000/g'  /etc/login.defs
#设置虚拟控制台KVM、TTY控制台等登录前提示语
echo 'IPV4: \4' >> /etc/issue
echo 'IPV6: \6' >> /etc/issue
#调整历史命令
/bin/sed -i 's/^HISTSIZE=.*/HISTSIZE=100000/' /etc/profile
/bin/cat >> /etc/profile <<\EOF
USER_IP=`who -u am i 2>/dev/null | awk '{print $NF}' | sed -r 's/[()]//g'`
if [ "$USER_IP" = "" ]
then
USER_IP=`hostname`
fi
export HISTTIMEFORMAT="%F %T $USER_IP `whoami` "
shopt -s histappend
export PROMPT_COMMAND="history -a"
EOF
   
#修改root用户终端颜色
echo "PS1='\\[\\e[37;1m\\][\\[\\e[31;1m\\]\\u\\[\\e[34;1m\\]@\\[\\e[32;1m\\]\\h \\[\\e[31;1m\\]\\w \\[\\e[33;1m\\]\\t\\[\\e[37;1m\\]]\\[\\e[32;1m\\]\\$ \\[\\e[m\\]'" >> /root/.bashrc

#--------------------------------------------------------------------------
# End of post
#--------------------------------------------------------------------------
) 2>&1
%end


















































#                  .........              ...mm*****=m..
#               ..xm**""""""""**mmuueWWWu.um""`         `"*mu
#             um""                $$$$$$$$`                 "*u.
#           .@"                   $$$$$$$$                    `*u
#          .$`                    `*$$$$**mu..ueeu.             *x
#         .$`              ....      ``    "I$$$$$$u             $
#         !!             :W$$$$$e           $$$$$$$$             ?X
#         `$              "****""           "$$$$$$$e.      .    ~$-
#         m*U                                 """"  "*e.    TWe.  "W
#          e$x                                        `T@- u$$$$e  *:
#          ""*u.                                      e"  e$$$$$$U `$
#             "*mu..                                 :*  x$$$$$$$$  "x
#                """*mme....                         !! u$$$$$$$$$!  $
#                      ``""""**m..                   $`:$$$$$$$$$$!  $!
#                               "*@.              ...$ U$$$$$$$$$$!  $~
#                                  W        ..um****** *$$$$$$$$$$!  $
#                                  $Weeu..x@""`     !!  $$$$$$$$$*  xT
#                                  $**$$$$$!        `*u `*$$$$$$*  :$
#                        ...m*u..e"?xmx`"*$!          "*x. """""  u@"
#                     ...$""W `$"U=" .@m: !!            `"***mmm=""
#                    -$``*  " :S.$   `-"?:U!
#                     $u      ~$""    .u` $!
#                    .$"*W.    "@.m***""  ~$
#                    "u  `"e.   `"         *
#                   .m"*m**""e       .m    ~U
#                 .e"        "@. ..m*"      $:
#                 X"           "@""         ~$
#                :*                         .$
#         eem**. !!                         W!
#         $`   "*W!                        u$!
#         $      ?!                       x$$
#         $      !X                      .$$$
#         $       $                      `*$~
#         $       `@.                     x?
#         $         `                    .$
#         $                             .@*@u
#         $                            x*W  *u
#         $      e.                  .u" "W  "@u
#         *:     "*u.            ..m*"`   "W   "@.
#     ...m****mmmmmW$e.....   .u@T"        "mu.m@**
#   u*""`          ````""""***"` "m.         ``
# :$"  x*` ..                      "*m.
# !$  u"  .$                          $
# `**********************************""


#                                  .,cccchhhhccc,?""?L
#                                 ,cb$$$$$$$$$$$$$$$$$$$c,
#                              ,r="3$$$$$$$?$$?$$$$$$$$$$$$c           ,,cccc
#                             ,$,d$$$$$$$$$c ?c`?$$$$$$$$$$$$$ ,,ccc$$P"',nn,"
#                            ,$$$$$$$$$$$$$$$,$h`$$$$$$$$$$$$$$$$$$",nMMMMMMMn
#                            $$$??$$$$$$??$$$$$$$$$$$$$$$$$$$$$$$",nMMMMMMMMMM
#                            ?$'nn`$$$F,nn ?$$$$$$$$$$$$$$$$$$$P'nMMMMMMMMMMM'
#                            `F.MM,?$$ MMML`$$$$$$$$$$$$$$$$$$$.MMMMMMMMMMMMM
#                             $:P  J$F{M"  ,$$$$$$$$$$$$$$$$$$$.".,nMMMMMMMP'
#                             $_`_ ""F `   J$$$$$$$$$$$$$$$$$$F.MndMMMMMMMP'
#                           ,'    ``"4,,,c$$$$$$$$$$$$$$$$$$$$$.TMMMMMMMMf'
#                          ;$,       ,$$$$$$$$$$$$$$$$$$$$$$F "?bc,,""""'
#                          ?$C`3cccc$$$xc `???$$$$$$$$$$$""
#                            ""\,"?$$$P",d$$ccc$$$$$$$$$F
#                                "?ccccd$$$$$$$$$$$$$P""
#                                  `?$$$$$$$$$c
#                                   `$$$$$$$$$'
#                                    $$$$$$,cc,
#                                   J??$$$P$$$$
#                              ,r, ,",cc,"P'$$$$
#                             4$ F,F,$$$$bcc,"?$                          ,,ccc
#                            zF-  F $$L4,"?$$$$E                      _,d$$$$$$
#                           ,?d "JF d"F'$$c`?$$"4c,.               _,d$$$$$$$$'
#                               4$$c...J$$$$$eed$$$$$c,      _,ccd$$$$$$$$$$F
#                               J$$$$$$$$$$$$$$$$$$$$$$$,`?$$$$$$$$$$$$$$$P"
#                               $$$$$$$$$$$$$$$$$$$$$$$$$$ $$$$$$$$$$$$$P"
#                               `$$$$$$$$$$$$$$$$$$$$$$$$$,)$$$$$$$$$$$"
#                                ?$$$$$$$$$$$$$$$$$$$$$$$$>)$$$$$$$$$F
#                                 `$$$$$ $$$$$$$$$$$$$$$$$ $$$$$$$P"
#     ,cc=                       ,$c,"?F,$$$$$$$$$$$$$$$$'J$$$$P"
#   ,$$",$$$$$$$bc.              $$$$$P $$$$$$$$$$$$$$$F',$PF"
#  {$$"c$$$$$$",,zcchhc,         $$$$$ d$$$$$$$$$$$$$$  "'
#   ?b{$$$$$ ,$",ccccc,$$$bc,    `$$$$ $$$$$$$$$$$$$P'
#      `""?" ",J$$$$$$$$$$$$$$cc  ?$$$ ?$$$$$$$$$$$"
#             ?$$$$$$$$$$$$$$$$$$c,"$$b`?$$$$$$$$P'
#               `""????$$$$$$$$$$$$b,"?b`?$$$$$$$'
#                        `""??$$$$$$$$c`?`?$$$$"
#                               `"?$$$$$ec.$$$$
#                                   `"?$$$$$$$$L
#                                       `"??$$$F


#                     _ooOoo_
#                    o8888888o
#                    88" . "88
#                    (| -_- |)
#                    O\  =  /O
#                 ____/`---'\____
#               .'  \\|     |//  `.
#              /  \\|||  :  |||//  \
#             /  _||||| -:- |||||-  \
#             |   | \\\  -  /// |   |
#             | \_|  ''\---/''  |   |
#             \  .-\__  `-`  ___/-. /
#           ___`. .'  /--.--\  `. . __
#        ."" '<  `.___\_<|>_/___.'  >'"".
#       | | :  `- \`.;`\ _ /`;.`/ - ` : | |
#       \  \ `-.   \_ __\ /__ _/   .-` /  /
#  ======`-.____`-.___\_____/___.-`____.-'======
#                     `=---='
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#           佛祖保佑       永无BUG



#  ░░░░░░░░░░░░░░░░░░░░░░░░▄░░
#  ░░░░░░░░░▐█░░░░░░░░░░░▄▀▒▌░
#  ░░░░░░░░▐▀▒█░░░░░░░░▄▀▒▒▒▐▒
#  ░░░░░░░▐▄▀▒▒▀▀▀▀▄▄▄▀▒▒▒▒▒▐▒
#  ░░░░░▄▄▀▒░▒▒▒▒▒▒▒▒▒█▒▒▄█▒▐▒
#  ░░░▄▀▒▒▒░░░▒▒▒░░░▒▒▒▀██▀▒▌▒
#  ░░▐▒▒▒▄▄▒▒▒▒░░░▒▒▒▒▒▒▒▀▄▒▒▒
#  ░░▌░░▌█▀▒▒▒▒▒▄▀█▄▒▒▒▒▒▒▒█▒▐
#  ░▐░░░▒▒▒▒▒▒▒▒▌██▀▒▒░░░▒▒▒▀▄
#  ░▌░▒▄██▄▒▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒
#  ▀▒▀▐▄█▄█▌▄░▀▒▒░░░░░░░░░░▒▒▒
#  单身狗就这样默默地看着你，一句话也不说



# ┌───┐   ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┐
# │Esc│   │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│ │P/S│S L│P/B│  ┌┐    ┌┐    ┌┐
# └───┘   └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┘  └┘    └┘    └┘
# ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐ ┌───┬───┬───┐ ┌───┬───┬───┬───┐
# │~ `│! 1│@ 2│# 3│$ 4│% 5│^ 6│& 7│* 8│( 9│) 0│_ -│+ =│ BacSp │ │Ins│Hom│PUp│ │N L│ / │ * │ - │
# ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤ ├───┼───┼───┤ ├───┼───┼───┼───┤
# │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │{ [│} ]│ | \ │ │Del│End│PDn│ │ 7 │ 8 │ 9 │   │
# ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤ └───┴───┴───┘ ├───┼───┼───┤ + │
# │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│" '│ Enter  │               │ 4 │ 5 │ 6 │   │
# ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤     ┌───┐     ├───┼───┼───┼───┤
# │ Shift  │ Z │ X │ C │ V │ B │ N │ M │< ,│> .│? /│  Shift   │     │ ↑ │     │ 1 │ 2 │ 3 │   │
# ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤ ┌───┼───┼───┐ ├───┴───┼───┤ E││
# │ Ctrl│    │Alt │         Space         │ Alt│    │    │Ctrl│ │ ← │ ↓ │ → │ │   0   │ . │←─┘│
# └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘ └───┴───┴───┘ └───────┴───┴───┘

# MacBook Pro
#      _________________________________________________________________
#   /    _____________________________________________________________    \
#   |   |                                                             |   |
#   |   |  >_                             .                           |   |
#   |   |                                . *                          |   |
#   |   |                                "  ..                        |   |
#   |   |                          .=*&æ..="""*.                      |   |
#   |   |                        .     ""        *                    |   |
#   |   |                       &               *                     |   |
#   |   |                       &c               .                    |   |
#   |   |                       *e                *                   |   |
#   |   |                        "&b            .                     |   |
#   |   |                           &æ     .  .                       |   |
#   |   |                             &ææ""æ=                         |   |
#   |   |                                   "                         |   |
#   |   |                      ______  ______  ______                 |   |
#   |   |                     |______||_____/ |      |                |   |
#   |   |                     |       |     \ |______|                |   |
#   |   |                                                             |   |
#   |   |_____________________________________________________________|   |
#    \____________________________________________________________________/
#                    \_______________________________________/
#                 .---------------------------------------------.
#              _-'.... .-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.  ....`-_
#           _-'..... .---.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.--.  .....`-_
#        _-'....... .---.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-`__`. .......`-_
#     _-'......... .-----.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-----. .........`-_
#  _-'........... .---.-. .-----------------------------. .-.---. ...........`-_
# :-----------------------------------------------------------------------------:
# `-----------------------------------------------------------------------------'

#                                       ...,,,,,...
#                        :        ..eed$$$$$$$$$$$$$bee..
#                    .   U    ued$$$$$$$$$$$$$$$$$$$$$$$$eu
#                    `~m.$  u$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$e.
#                ..     "$.d$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$u
#                ""#=q.  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$u
#                   .d8u.$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$u
#                 .e$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$e.
#               u$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$u
#             .d$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$e
#            u$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$I?$b
#           u$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ $$b
#          :$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$b`$$U
#          $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$:`$$
#         !$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ "$:
#         $$$$$$$$$$$$$$$$$$$$$$u"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$: $!
#         $$$$$$$$$$$$$$$$$$$$$$$u "?$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$U !!
#        !$$$$$$$$$$$$$$$$$$$$$$$$$:. "??$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ `~
#        `$$$$$$$$$$$$$$$$$$$$$$$$$;T$eu.`""???$$$$$$$$$$$$$$$$$$$$$$$$$$
#         $$$$$$$$$$$$$$$$$$$$$$$$$t;$$$$$beeu..`""'..,,,..`""??$$$$$$$$$
#         ?$$$$$$$$$$$$$$$$*$$$$$$$F;$$$$$$$"".,,CI$$$$$$$$$$$Wu`"?$$$$$$;
#         `$$$$$$$$$$$$$$$T!$$$$$$$`!$$$$$'.ud$$$$$$$$$$$$$$$$$$e. "?$$$$
#          ?$$$$$$$$$$$$$$!!$$$$$$$ U$$$$'u$$$$$$$$$$$$$$$$$$$"I$*:  "$$$
#           $$$$$$$$$$$$$f``$$$$$$':$$$$$e$$$$$$F"?$$$$$$$$$*(m"(ueu  "?T
#           `$$$$$$$$$$$"   "$$$$f.$$$$$$$$$$F"  ,$$$$$$$$$"u"  !$$T
#            `$$$$$$$$$f ee. "$$$ $$$$$$$$$$"    d$$$$$$$$f.F   W$$
#              "$$$$$$$` $$$ee."'u$$$$$$$$$$    u$$$$$$$$$ 4b.u$$$$
#               "$$$$$$  ?$$$$$u.$$$$$$$$$$$u..e$$$$$$$$$$."$$$$$$$u
#                 ?$$$$U `$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$W$$$$$$$$.
#                  "?$$$u "?$$$$?$$$$$$$$$$$$$$$$$$$$$$$$$$$T"$$$$$$W
#                    "$"$Wu.""??i~$$$$$$$$$$$$$$$$$$$$**$$$*`u$$$$$$T
#                       *$$$WWu .:"$$$$$$$$$$$$$**$$$WWW$*?.e$$$$$$$`
#                       `$$$$$$ ($ "$$$$$$$$$$* -@$$$$$$$$$$$*I$$$F'
#                        $$$$$*  $W."$$$$$$$$$UW$e `""""""?CuW$$$F
#                       :$**"`   $$$u "$$$$$$$$$$$W."Wu   $$$$$$"
#                        `      -$$$$W."?$$$$$$$$$$$eC?(.u$$$$"
#                             . :$$$$$$e.`"$$$$$$$$$****"I$$F`
#                           :!! !$$$$$$$$e. "??$$$$$WeeW$$F"
#                         :!!!' W$$$$$$$$$$$eu. `"""****"`
#                         !!;'  $$$$$$$$$$$$$$$u   ....:::
#                        !!!:  :$$$$$$$$$$$$$$$$$:  !!!!!!!.
#                        !!!!!:. ""?$$$$$$$$$$$$$W  !!!!!!!!:
#                        !!!!!!!!!:. "?$$$$$$$$$$$u `!!!!!!!!!
#                        !!!!!!!!!!!!:. "?$$$$$$$$$e.` !!!~~!!.
#                     .:. `!!!!!!!!!!!!!:."?$$$$$$$$$$u !`.. `!
#                  :!!!!!:  `!!!!!!!!!!!!!!: "?$$$$$$$$ ~ !!: `
#               :!!!:.`'!!!:  `!!!!!!!!!!!!!!:."?$$$$$$   !!!!
#            ::!!!!!!!! `!!!!:  `!!!!!!!!!'  !!: "$$$$f  !!!!!!.
#         .:!!!!!!!!!!!. `!!!!!:  `!!!!!!  :!!!!: T$$$` !!!!! !!:
#       :!!!!!!!!!!!!!!!  `!!!!!!.  !!!!' .!!!!!!  ?$$  !!!!!: !!!
#     :!!!!!!!!!!!!!!!!!!  !!!!!!!!. `!!  !!!!!!!! `$T  !!!!!!  !!!:
#   :!!!!!!!!!!!!!!!!!!!!  !!!!!!!!!: `!  !!!!!!!!: "!  !!!!!!! `!!!!:
#  !!!!!!!!!!!!!!!!!!!!!!. (!!!!!!!!!!:  !!!!!!!!!!. ~ <!!!!!!!. `!!!!!.


#                             .xm*f""??T?@hc.
#                           z@"` '~((!!!!!!!?*m.
#                         z$$$K   ~~(/!!!!!!!!!Mh
#                       .f` "#$k'`~~\!!!!!!!!!!!MMc
#                      :"     f*! ~:~(!!!!!!!!!!XHMk
#                      f      " %n:~(!!!!!!!!!!!HMMM.
#                     d          X~!~(!!!!!!!X!X!SMMR
#                     M :   x::  :~~!>!!!!!!MNWXMMM@R
#  n                  E ' *  ueeeeiu(!!XUWWWWWXMRHMMM>                :.
#  E%                 E  8 .$$$$$$$$K!!$$$$$$$$&M$RMM>               :"5
# z  %                3  $ 4$$$$$$$$!~!*$$$$$$$$!$MM$               :" `
# K   ":              ?> # '#$$$$$#~!!!!TR$$$$$R?@MME              z   R
# ?     %.             5     ^"""~~~:XW!!!!T?T!XSMMM~            :^    J
#  ".    ^s             ?.       ~~d$X$NX!!!!!!M!MM             f     :~
#   '+.    #L            *c:.    .~"?!??!!!!!XX@M@~           z"    .*
#     '+     %L           #c`"!+~~~!/!!!!!!@*TM8M           z"    .~
#       ":    '%.         'C*X  .!~!~!!!!!X!!!@RF         .#     +
#         ":    ^%.        9-MX!X!!X~H!!M!N!X$MM        .#`    +"
#           #:    "n       'L'!~M~)H!M!XX!$!XMXF      .+`   .z"
#             #:    ":      R *H$@@$H$*@$@$@$%M~     z`    +"
#               %:   `*L    'k' M!~M~X!!$!@H!tF    z"    z"
#                 *:   ^*L   "k ~~~!~!!!!!M!X*   z*   .+"
#                   "s   ^*L  '%:.~~~:!!!!XH"  z#   .*"
#                     #s   ^%L  ^"#4@UU@##"  z#   .*"
#                       #s   ^%L           z#   .r"
#                         #s   ^%.       u#   .r"
#                           #i   '%.   u#   .@"
#                             #s   ^%u#   .@"
#                               #s x#   .*"
#                                x#`  .@%.
#                              x#`  .d"  "%.
#                            xf~  .r" #s   "%.
#                      u   x*`  .r"     #s   "%.  x.
#                      %Mu*`  x*"         #m.  "%zX"
#                      :R(h x*              "h..*dN.
#                    u@NM5e#>                 7?dMRMh.
#                  z$@M@$#"#"                 *""*@MM$hL
#                u@@MM8*                          "*$M@Mh.
#              z$RRM8F"                             "N8@M$bL
#             5`RM$#                                  'R88f)R
#             'h.$"                                     #$x*

#                           :                      :M
#                          XMX                   .HMM>
#                          MMMM.                dMMMM>
#                         'MMMMMX     .....   dMMMMMMX
#                         XMMMMMMMnMMMMMMMMMMMMMMMMMMM
#                        :MMMMMMMMMMMMMMMMMMMMMMMMMMMM>
#                        XMMMMM!"    "MMMMMM"`  `"MMMMM
#                        MMMM#         4MMf        `MMMX
#                       XMMM            MX          'MMM:
#                      'MMM~            '>            MMM
#                      MMMf       .     '>            `MMX
#                     MMMM>     :MMM    '>   :MMM      MMMX
#                    XMMMM      MMMM>   '>   XMMMX     MMMMk
#                   MMMMMM>     MMMM~   'k   MMMMX     MMMMMh
#                  MMMMMMMX     XMMM    XX   ?MMM     XMMMMMMM
#                  MMMMMMMMk     ^`    X 'h    `     :MM##MMM~
#                   ?MM>  ^?M.       .!    %.      .HM"   MM
#                  .?M      '"%+++!".nMMMMn "%++!*" %.. 'M..
#                   `?M>+%L         <MMMMMMMM>       :   XM"
#                     'X   %        XMMMMMMMM>      X   'f
#                       X   `M.      ?MMMMMM~    .HM   :`
#                        %.  `MMMx.          .xHMMM   X
#                   ..    `X  `MMMMMMMMMMMMMMMMMMM  :f
#                 :MMMMMMMh:.M. 4MM     "     MM" xMMMMMMMMMMh.
#               :MMMMMMMMMMMMMMM: `%x.......x"`.HMMMMMMMMMMMMMM
#             .MMMMMMMMMMMMMMMMMMMMhx.......xHMMMMMMMMMMMMMMMMM
#     .nHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM`MMMMMMMMMMMMMMMMX
#   :MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMdMMMMMMMMMMMMMMMMMMMM
#  MMMMMMMMMMMMMMMMMMMM"``""MMMMMMMMMMMM!MMMMMMMMMMMMMMMMMMMM~
# MMMMMMMMMMMMMMMMMMM!     XMMMMMMMMMMMf:HMMMMMMMMMMMMMMMMM!
# M?MMMMMMMMMMMMMMMM`    :MMMMMMMMMMMM!MMMMMMMMMMMMMMMMMMM~
# :MMMMMMMMMMMMMMMMX     MMMMMMMMMMMMXXMMMMMMMMMMMMMMMMM`
# MMMMMMMMMMMMMMMMMX    'MMMMMMMMMMMMM!MMMMMMMMMMMMMMMMX
# MMMMMMMMMMMMMMMMM~    'MMMMMMMMMMMMMM?MMMMMMMMMMMMMMM~
#  #M)MMMMMMMM!MMM       MMMMMMMMMMMMMMMM/MMMMMMMMMMMM~
#    ?MMMMMM"-"2MMMMMx   XMMMMMMMMMMMMMMMMX?**!:MMM"`
#      ^""    XMMMMMMMM  'MMMMMMMMMMM"`MMMMMMMMMMM>
#            XMMMMMMMMML  MMMMMMMMMX .MMMMMMMMMMMf
#            XMMMMMMMMMML 4MMMMMMMMMXMMMMMMMMMMM~
#           XMMMMMMMMMMMMXMMMMMMMMMMXMMMMMMMMMx.
#             MMMMMMMMMMMMM!MMMMMMMMMMLMMMMMMMMMMMMx
#              #MMMMMMMMMMMMMMMMMMMMMMM!MMMMMMMMMMMMM
#               `MMMMMMMMMMMLMMMMMMMMMMM/MMMMMMMMMMMM>
#                  `*MMMMM!nMMMMMHh(?*MMM?MMMMMMMMMMM>
#                        XMMMMMMMMMMMMMMMX4MMMMMMMMMM
#                       XM#     `*MMMMMMMMXMMMMMMMM"
#                      'M          `MMMMMMMX^"*""
#                      Xf            !?MMMMMM
#                      'X             X ?MMMMM
#                       !             `> `MMMMX
#                        #:     4     X>  'MMMM>
#                         `L     "x.xM~    `MMMX
#                           %.    f         MMMX
#                            `#M``         :MMM~
#                               `Mx.      dMMM~
#                                  ``"**MM*"
